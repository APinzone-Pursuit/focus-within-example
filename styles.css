@import url('https://fonts.googleapis.com/css2?family=Source+Sans+Pro:wght@400;600&display=swap');

* {
  box-sizing: border-box;
}

body {
  color: #222;
  font-family: "Source Sans Pro", Arial, Helvetica, sans-serif;
  display: grid;
  align-items: center;
  justify-items: center;
  margin: 0;
  min-height: 100vh;
}

main {
  border: 1px solid #ddd;
  box-shadow: 0 0 50px #eee;
  margin: 0 auto;
  max-width: 600px;
  padding: 30px;
}

h1 {
  text-align: center;
}

p {
  font-size: 20px;
  line-height: 1.5;
}

.hint {
  color: #999;
  font-size: 16px;
  font-style: italic;
}

.form-field {
  background-color: #eee;
  border: 1px solid #ccc;
  margin: 40px auto 0;
  padding: 50px 25px 25px;
  position: relative;
  transition: 0.25s ease;
  width: 350px;
}

.form-field input,
.form-field label {
  color: #666;
  display: block;
  font-family: sans-serif;
  font-size: 16px;
  line-height: 32px;
  padding: 5px;
  transition: 0.25s ease;
}

.form-field label {
  pointer-events: none;
  opacity: 0.6;
  position: absolute;
  top: 9px;
  left: 26px;
  transform: translateY(100%);
}

.form-field input {
  border: 1px solid #ccc;
  outline: 0;
  width: 300px;
}

.form-field input::placeholder {
  opacity: 0;
}

/*
These styles will take effect when the 
input inside of the `.form-field` enters
a focus state. 
*/
.form-field:focus-within {
  background-color: thistle;
  border-color: rebeccapurple;
}

/*
If there's a value in the input, the 
placeholder-shown pseudo will return false,
so we can use it in combination with the
adjacent sibling combinator to keep the label 
out of the input and prevent overlap.

Try commenting out line 67 to see what happens
if we didn't account for the input having a value.

We give this the same style as our focus-within label
for the sake of consistency amongst our styles.
*/
.form-field input:not(:placeholder-shown)+label,
.form-field:focus-within label {
  color: #111;
  opacity: 1;
  transform: translateY(0);
}

.form-field:focus-within input {
  color: #4B992B;
  border-color: rebeccapurple;
}